# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-08-30 11:44
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='name')),
                ('age', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('main_position', models.CharField(blank=True, max_length=20)),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('weight', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('player_info', models.CharField(blank=True, max_length=20)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='GameDetailHitter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ininig_1', models.CharField(blank=True, max_length=100)),
                ('ininig_2', models.CharField(blank=True, max_length=100)),
                ('ininig_3', models.CharField(blank=True, max_length=100)),
                ('ininig_4', models.CharField(blank=True, max_length=100)),
                ('ininig_5', models.CharField(blank=True, max_length=100)),
                ('ininig_6', models.CharField(blank=True, max_length=100)),
                ('ininig_7', models.CharField(blank=True, max_length=100)),
                ('ininig_8', models.CharField(blank=True, max_length=100)),
                ('ininig_9', models.CharField(blank=True, max_length=100)),
                ('AB', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('hit', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('run', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('RBI', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('SB', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('CS', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('BB', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('HBP', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GameDetailPitcher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('win', models.BooleanField()),
                ('saves', models.BooleanField()),
                ('hold', models.BooleanField()),
                ('HR', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('hit', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('K', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('run', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('BB', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('HBP', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pitches', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GamePlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='GameSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_date', models.DateField(blank=True)),
                ('team', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='HitterHasLeague',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AB', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('H', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('double', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('triple', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('HR', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('R', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('RBI', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('BB', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('HBP', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('K', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('SB', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('CS', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('game', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HitterHasTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AB', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('H', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('double', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('triple', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('HR', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('R', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('RBI', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('BB', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('HBP', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('K', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('SB', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('CS', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('game', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField(auto_now_add=True)),
                ('finish_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PitcherHasLeague',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('win', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('lose', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('ininig', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('saves', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('hold', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('hit', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('HR', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('run', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('BB', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('HBP', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('K', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pitches', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.League')),
            ],
        ),
        migrations.CreateModel(
            name='PitcherHasTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('win', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('lose', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('ininig', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('saves', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('hold', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('hit', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('HR', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('run', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('BB', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('HBP', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('K', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pitches', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('manager', models.CharField(blank=True, max_length=20)),
                ('rate', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeamHasLeague',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('win', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('lose', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('draw', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.League')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.Team')),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('region', models.CharField(blank=True, max_length=50)),
                ('registration_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('league', models.ManyToManyField(blank=True, to='university.League')),
            ],
            options={
                'abstract': False,
            },
            bases=('university.baseuser',),
        ),
        migrations.AddField(
            model_name='team',
            name='university',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.University'),
        ),
        migrations.AddField(
            model_name='pitcherhasteam',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.Team'),
        ),
        migrations.AddField(
            model_name='hitterhasteam',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.Team'),
        ),
        migrations.AddField(
            model_name='hitterhasleague',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.League'),
        ),
        migrations.AddField(
            model_name='gameschedule',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.League'),
        ),
        migrations.AddField(
            model_name='gameschedule',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.GamePlace'),
        ),
        migrations.AddField(
            model_name='gamedetailpitcher',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.GameSchedule'),
        ),
        migrations.AddField(
            model_name='gamedetailhitter',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.GameSchedule'),
        ),
        migrations.AddField(
            model_name='baseuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='baseuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ManyToManyField(blank=True, to='university.Team'),
        ),
        migrations.AddField(
            model_name='player',
            name='university',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='university.University'),
        ),
        migrations.AddField(
            model_name='pitcherhasteam',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.Player'),
        ),
        migrations.AddField(
            model_name='pitcherhasleague',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.Player'),
        ),
        migrations.AddField(
            model_name='hitterhasteam',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.Player'),
        ),
        migrations.AddField(
            model_name='hitterhasleague',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.Player'),
        ),
        migrations.AddField(
            model_name='gamedetailpitcher',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.Player'),
        ),
        migrations.AddField(
            model_name='gamedetailhitter',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.Player'),
        ),
    ]
